package main

import "fmt"

/*
算术运算符
关系运算符
逻辑运算符
位运算符
赋值运算符

++（自增）和--（自减）在Go语言中是单独的语句，并不是运算符。
*/
func main() {
	//逻辑运算符
	age := 28
	//&&
	if age > 18 && age < 60 {
		fmt.Println("成年")
	}
	// ||
	if age < 18 || age > 60 {
		fmt.Println("成年")
	}
	// ！如果条件为 True，则为 False，否则为 True。
	isMay := false
	fmt.Println(!isMay)

	//位运算符  针对的是二进制数
	//5的二进制：101
	//2的二进制： 10

	//&:按位与
	//参与运算的两数各对应的二进位相与。 （两位均为1才为1）
	fmt.Println(5 & 2) //000  0

	//|:按位或
	//参与运算的两数各对应的二进位相或。 （两位有一个为1就为1）
	fmt.Println(5 | 2) //111  7

	//^: 异或
	//参与运算的两数各对应的二进位相异或，当两对应的二进位相异时，结果为1。（两位不一样则为1）
	fmt.Println(5 ^ 2) //111  7

	//<<: 左移
	//左移n位就是乘以2的n次方。
	//“a<<b”是把a的各二进位全部左移b位，高位丢弃，低位补0。
	fmt.Println(5 << 1) //1010  10
	fmt.Println(5 << 2) //10100  20

	//>>: 右移
	//右移n位就是除以2的n次方。
	//“a>>b”是把a的各二进位全部右移b位。超过数本身的直接变成0。
	fmt.Println(5 >> 1) //101 -> 10  2
	fmt.Println(5 >> 2) //101 -> 1  1
	fmt.Println(5 >> 5) //101 -> 0  0

	//赋值运算符
	//<<=	左移后赋值
	//>>=  &=  |=  ^=  同上
	x := 10
	x <<= 1
	fmt.Println(x)
}
